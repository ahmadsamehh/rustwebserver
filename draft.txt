    //whole https request =>
    // let http_request: Vec<_> = buf_reader
    //     //maps the output into lines line by line, returns <result,error> so we use the unwrap to get each line as a string.
    //     .lines()
    //     .map(|result| result.unwrap())
    //     .take_while(|line| !line.is_empty())
    //     .collect();

      // println!("Request: {http_request:#?}");



      fn send_response_ok(uri: &str) -> String {
    //this is the response sent fromt the server to the browser, http-version status-code status-message crlf then headers clf and then message body.
    //Resonse consists of 3 parts. defining them :
    let status_line = "HTTP/1.1 200 OK";
    let contents = fs::read_to_string(uri).unwrap();

    //important to tell the client what length to expect.
    let content_length = contents.len();

    //formatting the response
    return format!("{status_line}\r\nContent-Length: {content_length}\r\n\r\n{contents}");
}